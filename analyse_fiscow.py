# -*- coding: utf-8 -*-
"""Analyse_fiscow.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Wfn_sry1hbMH4S-BSW5thsL2zheQuRRP
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import LabelEncoder
import ast

data=pd.read_excel('/content/output_file.xlsx')
data

df=data[20:900]
df

Livres=df["Order"].tolist()
Livres

da=pd.DataFrame([
  {'Title': 'The Hating Game', 'Category': 'Romance'},
  {'Title': 'Emma', 'Category': 'Romance'},
  {'Title': 'A Walk to Remember', 'Category': 'Romance'},
  {'Title': 'Gone with the Wind', 'Category': 'Romance'},
  {'Title': 'Me Before You', 'Category': 'Romance'},
  {'Title': 'The Princess Bride', 'Category': 'Romance'},
  {'Title': 'Wuthering Heights', 'Category': 'Romance'},
  {'Title': 'To All the Boys I\'ve Loved Before', 'Category': 'Romance'},
  {'Title': 'Eleanor Oliphant Is Completely Fine', 'Category': 'Romance'},
  {'Title': 'Pride and Prejudice', 'Category': 'Romance'},
  {'Title': 'Sense and Sensibility', 'Category': 'Romance'},
  {'Title': 'The Rosie Project', 'Category': 'Romance'},
  {'Title': 'The Fault in Our Stars', 'Category': 'Romance'},
  {'Title': 'The Great Gatsby', 'Category': 'Romance'},
  {'Title': 'Twilight', 'Category': 'Romance'},
  {'Title': 'Romeo and Juliet', 'Category': 'Romance'},
  {'Title': 'The Notebook', 'Category': 'Romance'},
  {'Title': 'Outlander', 'Category': 'Romance'},
  {'Title': 'The Hating Game', 'Category': 'Science Fiction'},
  {'Title': 'Emma', 'Category': 'Mystery'},
  {'Title': 'A Walk to Remember', 'Category': 'Romance'},
  {'Title': 'Gone with the Wind', 'Category': 'Fantasy'},
  {'Title': 'Me Before You', 'Category': 'Romance'},
  {'Title': 'Emma', 'Category': 'Thriller'},
  {'Title': 'To All the Boys I\'ve Loved Before', 'Category': 'Fiction'},
  {'Title': 'Eleanor Oliphant Is Completely Fine', 'Category': 'Biography'},
  {'Title': 'To All the Boys I\'ve Loved Before', 'Category': 'Non-fiction'},
  {'Title': 'Jane Eyre', 'Category': 'Self-help'},
  {'Title': 'Emma', 'Category': 'Romance'},
  {'Title': 'Eleanor Oliphant Is Completely Fine', 'Category': 'Science Fiction'},
  {'Title': 'Jane Eyre', 'Category': 'Mystery'},
  {'Title': 'Pride and Prejudice', 'Category': 'Romance'},
  {'Title': 'Sense and Sensibility', 'Category': 'Thriller'},
  {'Title': 'Gone with the Wind', 'Category': 'Fantasy'},
  {'Title': 'Jane Eyre', 'Category': 'Non-fiction'},
  {'Title': 'Sense and Sensibility', 'Category': 'Biography'},
  {'Title': 'The Rosie Project', 'Category': 'Self-help'},
  {'Title': 'The Hating Game', 'Category': 'Fiction'},
  {'Title': 'Emma', 'Category': 'Science Fiction'},
  {'Title': 'The Princess Bride', 'Category': 'Mystery'},
  {'Title': 'A Walk to Remember', 'Category': 'Romance'},
  {'Title': 'Twilight', 'Category': 'Fantasy'},
  {'Title': 'Outlander', 'Category': 'Romance'},
  {'Title': 'The Hating Game', 'Category': 'Thriller'},
  {'Title': 'Jane Eyre', 'Category': 'Fiction'},
  {'Title': 'Sense and Sensibility', 'Category': 'Biography'},
  {'Title': 'Gone with the Wind', 'Category': 'Non-fiction'},
  {'Title': 'The Great Gatsby', 'Category': 'Self-help'},
  {'Title': 'The Rosie Project', 'Category': 'Science Fiction'},
  {'Title': 'Eleanor Oliphant Is Completely Fine', 'Category': 'Mystery'},
  {'Title': 'To All the Boys I\'ve Loved Before', 'Category': 'Romance'},
  {'Title': 'The Fault in Our Stars', 'Category': 'Fantasy'},
  {'Title': 'The Great Gatsby', 'Category': 'Fiction'},
  {'Title': 'Emma', 'Category': 'Science Fiction'},
  {'Title': 'Jane Eyre', 'Category': 'Mystery'},
  {'Title': 'A Walk to Remember', 'Category': 'Romance'},
  {'Title': 'Gone with the Wind', 'Category': 'Fantasy'},
  {'Title': 'Me Before You', 'Category': 'Romance'},
  {'Title': 'The Princess Bride', 'Category': 'Thriller'},
  {'Title': 'Wuthering Heights', 'Category': 'Biography'},
  {'Title': 'Sense and Sensibility', 'Category': 'Self-help'},
  {'Title': 'Pride and Prejudice', 'Category': 'Science Fiction'},
  {'Title': 'The Rosie Project', 'Category': 'Mystery'},
  {'Title': 'The Fault in Our Stars', 'Category': 'Romance'},
  {'Title': 'Outlander', 'Category': 'Fantasy'},
  {'Title': 'The Hating Game', 'Category': 'Fiction'},
  {'Title': 'The Notebook', 'Category': 'Science Fiction'},
  {'Title': 'The Princess Bride', 'Category': 'Mystery'},
  {'Title': 'The Rosie Project', 'Category': 'Romance'},
  {'Title': 'A Walk to Remember', 'Category': 'Fantasy'},
  {'Title': 'Wuthering Heights', 'Category': 'Thriller'},
  {'Title': 'Sense and Sensibility', 'Category': 'Biography'},
  {'Title': 'Jane Eyre', 'Category': 'Non-fiction'},
  {'Title': 'Pride and Prejudice', 'Category': 'Self-help'},
  {'Title': 'Emma', 'Category': 'Fiction'},
  {'Title': 'The Hating Game', 'Category': 'Science Fiction'},
  {'Title': 'The Great Gatsby', 'Category': 'Mystery'},
  {'Title': 'Me Before You', 'Category': 'Romance'},
  {'Title': 'Gone with the Wind', 'Category': 'Fantasy'},
  {'Title': 'Eleanor Oliphant Is Completely Fine', 'Category': 'Romance'},
  {'Title': 'Jane Eyre', 'Category': 'Thriller'},
  {'Title': 'The Fault in Our Stars', 'Category': 'Biography'},
  {'Title': 'Twilight', 'Category': 'Self-help'},
  {'Title': 'Romeo and Juliet', 'Category': 'Science Fiction'},
  {'Title': 'The Notebook', 'Category': 'Mystery'},
  {'Title': 'Outlander', 'Category': 'Romance'},
  {'Title': 'The Hating Game', 'Category': 'Fantasy'},
  {'Title': 'The Rosie Project', 'Category': 'Fiction'},
  {'Title': 'Sense and Sensibility', 'Category': 'Science Fiction'},
  {'Title': 'The Great Gatsby', 'Category': 'Mystery'},
  {'Title': 'To All the Boys I\'ve Loved Before', 'Category': 'Romance'},
  {'Title': 'The Princess Bride', 'Category': 'Fantasy'},
  {'Title': 'Pride and Prejudice', 'Category': 'Romance'},
  {'Title': 'Gone with the Wind', 'Category': 'Science Fiction'},
  {'Title': 'Wuthering Heights', 'Category': 'Mystery'},
  {'Title': 'A Walk to Remember', 'Category': 'Romance'},
  {'Title': 'Eleanor Oliphant Is Completely Fine', 'Category': 'Fantasy'},
  {'Title': 'Me Before You', 'Category': 'Romance'},
  {'Title': 'The Fault in Our Stars', 'Category': 'Thriller'},
  {'Title': 'Jane Eyre', 'Category': 'Biography'},
  {'Title': 'The Rosie Project', 'Category': 'Self-help'},
  {'Title': 'Romeo and Juliet', 'Category': 'Fiction'},
  {'Title': 'The Notebook', 'Category': 'Science Fiction'},
  {'Title': 'Twilight', 'Category': 'Mystery'},
  {'Title': 'Outlander', 'Category': 'Romance'},
  {'Title': 'The Hating Game', 'Category': 'Fantasy'},
  {'Title': 'The Great Gatsby', 'Category': 'Science Fiction'},
  {'Title': 'Wuthering Heights', 'Category': 'Mystery'},
  {'Title': 'Pride and Prejudice', 'Category': 'Romance'},
  {'Title': 'Gone with the Wind', 'Category': 'Science Fiction'},
  {'Title': 'Eleanor Oliphant Is Completely Fine', 'Category': 'Mystery'},
  {'Title': 'To All the Boys I\'ve Loved Before', 'Category': 'Romance'},
  {'Title': 'The Princess Bride', 'Category': 'Fantasy'},
  {'Title': 'Sense and Sensibility', 'Category': 'Fiction'},
  {'Title': 'A Walk to Remember', 'Category': 'Science Fiction'},
  {'Title': 'Jane Eyre', 'Category': 'Mystery'},
  {'Title': 'The Rosie Project', 'Category': 'Romance'},
  {'Title': 'The Fault in Our Stars', 'Category': 'Fantasy'},
  {'Title': 'Romeo and Juliet', 'Category': 'Fiction'},
  {'Title': 'The Notebook', 'Category': 'Self-help'},
  {'Title': 'Outlander', 'Category': 'Biography'},
  {'Title': 'Twilight', 'Category': 'Non-fiction'},
  {'Title': 'The Hating Game', 'Category': 'Biography'},
  {'Title': 'Eleanor Oliphant Is Completely Fine', 'Category': 'Mystery'},
  {'Title': 'The Great Gatsby', 'Category': 'Science Fiction'},
  {'Title': 'The Rosie Project', 'Category': 'Fiction'},
  {'Title': 'Pride and Prejudice', 'Category': 'Science Fiction'},
  {'Title': 'Sense and Sensibility', 'Category': 'Mystery'},
  {'Title': 'Gone with the Wind', 'Category': 'Fiction'},
  {'Title': 'Wuthering Heights', 'Category': 'Self-help'},
  {'Title': 'The Fault in Our Stars', 'Category': 'Biography'},
  {'Title': 'To All the Boys I\'ve Loved Before', 'Category': 'Non-fiction'},
  {'Title': 'Romeo and Juliet', 'Category': 'Fiction'},
  {'Title': 'Twilight', 'Category': 'Science Fiction'},
  {'Title': 'Outlander', 'Category': 'Biography'},
  {'Title': 'The Hating Game', 'Category': 'Mystery'},
  {'Title': 'Jane Eyre', 'Category': 'Self-help'},
  {'Title': 'Emma', 'Category': 'Science Fiction'},
  {'Title': 'The Princess Bride', 'Category': 'Mystery'},
  {'Title': 'A Walk to Remember', 'Category': 'Romance'},
  {'Title': 'Gone with the Wind', 'Category': 'Fantasy'},
  {'Title': 'Me Before You', 'Category': 'Romance'},
  {'Title': 'The Great Gatsby', 'Category': 'Thriller'},
  {'Title': 'Eleanor Oliphant Is Completely Fine', 'Category': 'Biography'},
  {'Title': 'Romeo and Juliet', 'Category': 'Self-help'},
  {'Title': 'The Fault in Our Stars', 'Category': 'Mystery'},
  {'Title': 'The Rosie Project', 'Category': 'Fiction'},
  {'Title': 'Pride and Prejudice', 'Category': 'Science Fiction'},
  {'Title': 'Twilight', 'Category': 'Biography'},
  {'Title': 'Wuthering Heights', 'Category': 'Non-fiction'},
  {'Title': 'Sense and Sensibility', 'Category': 'Fantasy'},
  {'Title': 'A Walk to Remember', 'Category': 'Fiction'},
  {'Title': 'The Princess Bride', 'Category': 'Mystery'},
  {'Title': 'The Hating Game', 'Category': 'Romance'},
  {'Title': 'Emma', 'Category': 'Fantasy'},
  {'Title': 'Jane Eyre', 'Category': 'Science Fiction'},
  {'Title': 'Eleanor Oliphant Is Completely Fine', 'Category': 'Self-help'},
  {'Title': 'Gone with the Wind', 'Category': 'Mystery'},
  {'Title': 'The Great Gatsby', 'Category': 'Biography'},
  {'Title': 'To All the Boys I\'ve Loved Before', 'Category': 'Fiction'},
  {'Title': 'Romeo and Juliet', 'Category': 'Non-fiction'},
  {'Title': 'Me Before You', 'Category': 'Fantasy'},
  {'Title': 'The Notebook', 'Category': 'Fiction'},
  {'Title': 'The Rosie Project', 'Category': 'Science Fiction'},
  {'Title': 'Twilight', 'Category': 'Self-help'},
  {'Title': 'Outlander', 'Category': 'Biography'},
  {'Title': 'The Hating Game', 'Category': 'Mystery'},
  {'Title': 'Jane Eyre', 'Category': 'Science Fiction'},
  {'Title': 'The Fault in Our Stars', 'Category': 'Fiction'},
  {'Title': 'Sense and Sensibility', 'Category': 'Fantasy'},
  {'Title': 'A Walk to Remember', 'Category': 'Biography'},
  {'Title': 'The Princess Bride', 'Category': 'Non-fiction'},
  {'Title': 'Eleanor Oliphant Is Completely Fine', 'Category': 'Fiction'},
  {'Title': 'Pride and Prejudice', 'Category': 'Thriller'},
  {'Title': 'Gone with the Wind', 'Category': 'Self-help'},
  {'Title': 'The Great Gatsby', 'Category': 'Mystery'},])


da.head()

da.to_csv("data_training.csv",index=False)

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score


dtt = pd.read_csv("/content/data_training.csv")


X_train, X_test, y_train, y_test = train_test_split(dtt['Title'], dtt['Category'], test_size=0.2, random_state=42)
vectorizer = CountVectorizer()
X_train_vec = vectorizer.fit_transform(X_train)
X_test_vec = vectorizer.transform(X_test)
classifier = MultinomialNB()
classifier.fit(X_train_vec, y_train)
y_pred = classifier.predict(X_test_vec)
accuracy = accuracy_score(y_test, y_pred)
print(f"Précision du modèle : {accuracy * 100:.2f}%")

def display_prediction(title):
    title_vec = vectorizer.transform([title])
    category_predicted = classifier.predict(title_vec)
    print(f"Le livre '{title}' est prédit comme appartenant à la catégorie '{category_predicted[0]}'.")


display_prediction("zebe")

def predict_categories(data):

    titles = data['Order']
    titles_vec = vectorizer.transform(titles)
    categories_predicted = classifier.predict(titles_vec)


    result_df = pd.DataFrame({
        'Title': titles,
        'Predicted_Category': categories_predicted
    })


    result_df.to_csv('predicted_categories.csv', index=False)
    print("Fichier 'predicted_categories.csv' créé avec succès.")


predict_categories(df)

result=pd.read_csv("/content/predicted_categories.csv")
result

data.isna().sum()

df=data.iloc[26:]
df.head()

# une liste de villes marocaines
villes_marocaines = [
    'Agadir', 'AlHoceima', 'Beni Mellal', 'Casablanca', 'El Jadida', 'Errachidia',
    'Essaouira', 'Fès', 'Kénitra', 'Khémisset', 'Khouribga', 'Laâyoune', 'Marrakech',
    'Meknès', 'Nador', 'Ouarzazate', 'Oujda', 'Rabat', 'Safi', 'Salé', 'Settat', 'Sidi Kacem',
    'Tanger', 'Taza', 'Témara', 'Tétouan', 'Tiznit'
]


def trouver_ville(adresse):
    if pd.notnull(adresse):
        for ville in villes_marocaines:
            if ville.lower() in adresse.lower():
                return ville
    return 'Fès'

data['Ville'] = data['Adresse'].apply(trouver_ville)

data['Adresse'] = data["Adresse"].fillna(data['Ville'])



data

ID=data['ID'].copy()

import folium
from geopy.geocoders import Nominatim
import pandas as pd

def get_coordinates(address):
    # Utilisez un géocodeur spécifique pour le Maroc
    geolocator = Nominatim(user_agent="my_geocoder")
    location = geolocator.geocode(address, country_codes="MA")  # Utilisez le code pays "MA" pour le Maroc

    if location:
        return (location.latitude, location.longitude)
    else:
        return None

def create_map_from_dataframe(df, address_column, limit=None):
    # Créer une carte centrée sur le Maroc
    my_map = folium.Map(location=[31.7917, -7.0926], zoom_start=6)

    # Ajouter des marqueurs pour chaque adresse dans la DataFrame (avec une limite)
    for index, row in df.head(limit).iterrows():
        address = row[address_column]
        coordinates = get_coordinates(address)

        if coordinates:
            folium.Marker(location=coordinates, popup=address).add_to(my_map)

    # Sauvegarder la carte dans un fichier HTML
    my_map.save("map.html")

if __name__ == "__main__":

    # Spécifiez le nom de la colonne contenant les adresses
    address_column_name = "Adresse"

    # Limitez le nombre d'adresses à traiter (par exemple, 10 adresses)
    limit_addresses = 1000
    create_map_from_dataframe(data, address_column_name, limit=limit_addresses)

import pandas as pd

data['Ville'] = data['Adresse'].apply(lambda adresse: [ville for ville in villes_marocaines if ville.lower() in str(adresse).lower()])

ville_counts = pd.Series([ville for villes in data['Ville'] for ville in villes]).value_counts()

print(ville_counts)

books=data["Order"].copy()
books

df=data.drop('Order',axis=1)
df.head()

df=df.drop("Ville",axis=1)
df.head()

df=df.drop("Phone Number",axis=1)
df.head()

from sklearn.preprocessing import LabelEncoder

label_encoder = LabelEncoder()  # Assurez-vous d'utiliser les parenthèses pour créer une instance

df["Adresse_encoded"] = label_encoder.fit_transform(df["Adresse"])

df.head()

dataframe=df.drop("Adresse",axis=1)
dataframe.head()

corr_matrix=dataframe.corr()

sns.heatmap(corr_matrix,annot=True, cmap='viridis')